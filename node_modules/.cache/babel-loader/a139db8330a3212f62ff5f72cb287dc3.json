{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\my covid tracker\\\\covid-19-tracker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { MenuItem, FormControl, Select, Card, CardContent } from \"@material-ui/core\";\nimport './App.css';\nimport InfoBox from \"./InfoBox\";\nimport Map from \"./Map\";\nimport Table from \"./Table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          // united states ,United kingdom \n          value: country.countryInfo.iso2 // UK , USA , FR\n\n        }));\n        setTableData(data);\n        setCountries(countries);\n      });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = event => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n    const url = countryCode === 'worldwide' ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    fetch(url).then(response => response.json()).then(data => {\n      setCountry(countryCode); // all of the data form the country  \n\n      setCountryInfo(data);\n    });\n  };\n\n  console.log(\"country info >>>\", countryInfo);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Covid-19 Tracker \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 39\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"app__dropdown\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            variant: \"outlined\",\n            onChange: onCountryChange,\n            value: country,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"worldwide\",\n              children: \"Worldwide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 45\n            }, this), countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: country.value,\n              children: country.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 53\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__stats\",\n        children: [/*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Coronavirus Cases\",\n          cases: countryInfo.todayCases,\n          total: countryInfo.cases\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"recovered\",\n          cases: countryInfo.todayRecovered,\n          total: countryInfo.recovered\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Deaths\",\n          cases: countryInfo.todayDeaths,\n          total: countryInfo.deaths\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"app__right\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Live Caes by country \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          countries: tableData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" world wide new cases \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QC3sUB/WHS3cIgIwpWO5XB8+zG0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/my covid tracker/covid-19-tracker/src/App.js"],"names":["React","useState","useEffect","MenuItem","FormControl","Select","Card","CardContent","InfoBox","Map","Table","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableData","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","onCountryChange","event","countryCode","target","url","console","log","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import React ,{useState, useEffect } from \"react\"\nimport { MenuItem, FormControl, Select , Card, CardContent } from \"@material-ui/core\" ; \nimport './App.css';\nimport InfoBox from \"./InfoBox\";\nimport Map from \"./Map\"\nimport Table from \"./Table\"\n\nfunction App() {\n\n\n  const [ countries , setCountries] = useState( [] );\n  const [ country , setCountry ] = useState(\"worldwide\");\n  const [ countryInfo , setCountryInfo ] = useState({});\n  const [ tableData , setTableData ] = useState([]);\n\n  useEffect(() => {\n   \n    fetch(\"https://disease.sh/v3/covid-19/all\")\n    .then(response => response.json() )\n    .then( data => {\n      setCountryInfo(data); \n\n    });\n\n  }, [])\n\n  useEffect(() => {\n    const getCountriesData = async() => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n      .then((response) => response.json())\n      .then((data)=>{\n          const countries = data.map((country)=>({\n              name: country.country,           // united states ,United kingdom \n              value: country.countryInfo.iso2 // UK , USA , FR\n            }));\n            \n           setTableData(data); \n           setCountries(countries); \n      });\n    };\n    getCountriesData(); \n  }, []) ;\n\n\n\n\n\n   const onCountryChange = (event) =>{\n     const countryCode = event.target.value ; \n     setCountry(countryCode);\n\n     const url = countryCode === 'worldwide' ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}` ; \n\n      fetch(url)\n     .then( response => response.json() )\n     .then( data =>{\n       \n         setCountry(countryCode) ; \n\n         // all of the data form the country  \n         setCountryInfo(data); \n\n     });\n\n  };\n\n\n  console.log(\"country info >>>\" , countryInfo ) ; \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  return (\n    \n    \n    <div className=\"app\"> \n         \n         <div className=\"app__left\">\n\n                                <div className =\"app__header\" >\n                                      <h1> Covid-19 Tracker </h1>\n                                      <FormControl className =\"app__dropdown\">\n                                        <Select variant =\"outlined\"  onChange={onCountryChange} value = {country} >\n                                            \n                                            <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n                                            {countries.map( country =>( \n                                                    <MenuItem value={country.value}>{country.name}</MenuItem>\n                                              ))}\n                                          \n                                        </Select>\n                                      </FormControl>\n                                  </div>\n\n\n                                <div className =\"app__stats\">\n                                    <InfoBox title =\"Coronavirus Cases\"  cases = {countryInfo.todayCases}  total = {countryInfo.cases}/>\n                                    <InfoBox title =\"recovered\"  cases = {countryInfo.todayRecovered}  total = {countryInfo.recovered}/>\n                                    <InfoBox title =\"Deaths\"  cases = {countryInfo.todayDeaths}  total = {countryInfo.deaths}/>\n                                </div>\n\n                                <Map /> \n\n         </div>\n\n         < Card className =\"app__right\"> \n         \n               <CardContent>\n\n                   {/* Table  */}\n                   {/* graph */}\n\n                   <h3>Live Caes by country </h3>\n                   < Table countries ={tableData} />\n\n                   <h3> world wide new cases </h3>\n\n               </CardContent>\n\n         </Card>\n    \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}