{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\my covid tracker\\\\covid-19-tracker\\\\src\\\\LineGraph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\"; // https://disease.sh/v3/covid-19/historical/all?lastdays=120\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LineGraph() {\n  _s();\n\n  const [data, setData] = useState({});\n\n  const buildChartData = (data, casesType = 'cases') => {\n    const charData = [];\n    let lastDataPoint;\n\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        const newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint\n        };\n        charData.push(newDataPoint);\n      }\n\n      lastDataPoint = data[casesType][date];\n    }\n\n    return charData;\n  };\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\").then(response => response.json()).then(data => {\n      // clever stuff here \n      const charData = buildChartData(data);\n      setData(charData);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" I am a graph \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        datasets: [{\n          backgroundColor: \"rgba(204,16,52,0.5)\",\n          borderColor: \"#CC1034\",\n          data: data\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LineGraph, \"X5tDWfQRUCptvBWg/EzTkkRjsP0=\");\n\n_c = LineGraph;\nexport default LineGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/my covid tracker/covid-19-tracker/src/LineGraph.js"],"names":["React","useState","useEffect","Line","LineGraph","data","setData","buildChartData","casesType","charData","lastDataPoint","date","cases","newDataPoint","x","y","push","fetch","then","response","json","datasets","backgroundColor","borderColor"],"mappings":";;;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,IAAT,QAAqB,iBAArB,C,CAEA;;;;AAOA,SAASC,SAAT,GAAqB;AAAA;;AAElB,QAAM,CAAEC,IAAF,EAASC,OAAT,IAAqBL,QAAQ,CAAC,EAAD,CAAnC;;AAIA,QAAMM,cAAc,GAAG,CAAEF,IAAF,EAASG,SAAS,GAAE,OAApB,KACvB;AAEC,UAAMC,QAAQ,GAAG,EAAjB;AACA,QAAIC,aAAJ;;AAEE,SAAK,IAAIC,IAAT,IAAiBN,IAAI,CAACO,KAAtB,EACE;AACA,UAAGF,aAAH,EACA;AACI,cAAMG,YAAY,GAAG;AACjBC,UAAAA,CAAC,EAAEH,IADc;AAEjBI,UAAAA,CAAC,EAAEV,IAAI,CAACG,SAAD,CAAJ,CAAgBG,IAAhB,IAAwBD;AAFV,SAArB;AAKAD,QAAAA,QAAQ,CAACO,IAAT,CAAcH,YAAd;AACH;;AAEDH,MAAAA,aAAa,GAAGL,IAAI,CAACG,SAAD,CAAJ,CAAgBG,IAAhB,CAAhB;AACH;;AAEJ,WAAOF,QAAP;AACA,GAtBE;;AAyBHP,EAAAA,SAAS,CAAC,MAAM;AAEZe,IAAAA,KAAK,CAAC,4DAAD,CAAL,CACCC,IADD,CACOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADnB,EAECF,IAFD,CAEOb,IAAI,IAAI;AAEV;AACA,YAAMI,QAAQ,GAAGF,cAAc,CAACF,IAAD,CAA/B;AACAC,MAAAA,OAAO,CAACG,QAAD,CAAP;AAEJ,KARD;AAUH,GAZQ,EAYN,EAZM,CAAT;AAkBI,sBACI;AAAA,4BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAEG,QAAC,IAAD;AAAM,MAAA,IAAI,EAAE;AACRY,QAAAA,QAAQ,EAAE,CAAC;AAEVC,UAAAA,eAAe,EAAE,qBAFP;AAGVC,UAAAA,WAAW,EAAG,SAHJ;AAIVlB,UAAAA,IAAI,EAAGA;AAJG,SAAD;AADF;AAAZ;AAAA;AAAA;AAAA;AAAA,YAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GAlEQD,S;;KAAAA,S;AAoET,eAAeA,SAAf","sourcesContent":["\r\nimport React ,{useState, useEffect } from \"react\"\r\nimport { Line } from \"react-chartjs-2\" ; \r\n\r\n// https://disease.sh/v3/covid-19/historical/all?lastdays=120\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction LineGraph() {\r\n   \r\n   const [ data , setData ] = useState({});\r\n   \r\n\r\n   \r\n   const buildChartData = ( data , casesType ='cases' ) => \r\n   {\r\n   \r\n    const charData = [] ;\r\n    let lastDataPoint ; \r\n\r\n      for( let date in data.cases )\r\n        {\r\n        if(lastDataPoint)\r\n        {\r\n            const newDataPoint = {\r\n                x: date ,\r\n                y: data[casesType][date] - lastDataPoint  \r\n            }\r\n\r\n            charData.push(newDataPoint); \r\n        }\r\n\r\n        lastDataPoint = data[casesType][date] ;\r\n    }\r\n\r\n return charData ;\r\n}\r\n \r\n\r\nuseEffect(() => {\r\n   \r\n    fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n    .then( response => response.json())\r\n    .then( data => {\r\n\r\n         // clever stuff here \r\n         const charData = buildChartData(data);\r\n         setData(charData);\r\n\r\n    });\r\n\r\n}, []) ;\r\n\r\n\r\n \r\n\r\n   \r\n    return (\r\n        <div>\r\n           <h1> I am a graph </h1>\r\n           <Line data={{\r\n               datasets: [{\r\n                \r\n                backgroundColor: \"rgba(204,16,52,0.5)\",\r\n                borderColor : \"#CC1034\" ,\r\n                data : data \r\n\r\n               }\r\n            ]\r\n           }}\r\n           \r\n           />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LineGraph"]},"metadata":{},"sourceType":"module"}