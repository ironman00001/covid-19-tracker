{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\my covid tracker\\\\covid-19-tracker\\\\src\\\\util.js\";\nimport React from \"react\";\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\nimport \"./Map.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst casesTypeColors = {\n  cases: {\n    hex: \"#CC1034\",\n    rgb: \"rgb(204, 16, 52)\",\n    half_op: \"rgba(204, 16, 52, 0.5)\",\n    multiplier: 200\n  },\n  recovered: {\n    hex: \"#7dd71d\",\n    rgb: \"rgb(125, 215, 29)\",\n    half_op: \"rgba(125, 215, 29, 0.5)\",\n    multiplier: 260\n  },\n  deaths: {\n    hex: \"#fb4443\",\n    rgb: \"rgb(251, 68, 67)\",\n    half_op: \"rgba(251, 68, 67, 0.5)\",\n    multiplier: 500\n  }\n};\nexport const sortData = data => {\n  const sortedData = [...data];\n  sortedData.sort((a, b) => {\n    if (a.cases > b.cases) {\n      return -1;\n    } else {\n      return 1;\n    }\n  });\n  return sortedData;\n}; // draw circles on the map with interactive tooltip\n\nexport const showDataOnMap = (data, casesType = \"cases\") => data.map(country => /*#__PURE__*/_jsxDEV(Circle, {\n  center: [country.countryInfo.lat, country.countryInfo.long],\n  color: casesTypeColors[casesType].hex,\n  fillColor: casesTypeColors[casesType].hex,\n  fillOpacity: 0.4,\n  radius: Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier,\n  children: /*#__PURE__*/_jsxDEV(Popup, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-flag\",\n        style: {\n          backgroundImage: `url(${country.countryInfo.flag})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-name\",\n        children: country.country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-confirmed\",\n        children: [\"Cases: \", numeral(country.cases).format(\"0,0\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-recovered\",\n        children: [\"Recovered: \", numeral(country.recovered).format(\"0,0\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-deaths\",\n        children: [\"Deaths: \", numeral(country.deaths).format(\"0,0\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 46,\n  columnNumber: 5\n}, this));","map":{"version":3,"sources":["C:/Users/Dell/Desktop/my covid tracker/covid-19-tracker/src/util.js"],"names":["React","numeral","Circle","Popup","casesTypeColors","cases","hex","rgb","half_op","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","showDataOnMap","casesType","map","country","countryInfo","lat","long","Math","sqrt","backgroundImage","flag","format"],"mappings":"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","sourcesContent":["import React from \"react\" ;\r\nimport numeral from \"numeral\" ;\r\nimport { Circle , Popup } from \"react-leaflet\" ; \r\nimport \"./Map.css\";\r\n\r\n\r\nconst casesTypeColors = {\r\n    cases: {\r\n      hex: \"#CC1034\",\r\n      rgb: \"rgb(204, 16, 52)\",\r\n      half_op: \"rgba(204, 16, 52, 0.5)\",\r\n      multiplier: 200,\r\n    },\r\n    recovered: {\r\n      hex: \"#7dd71d\",\r\n      rgb: \"rgb(125, 215, 29)\",\r\n      half_op: \"rgba(125, 215, 29, 0.5)\",\r\n      multiplier: 260,\r\n    },\r\n    deaths: {\r\n      hex: \"#fb4443\",\r\n      rgb: \"rgb(251, 68, 67)\",\r\n      half_op: \"rgba(251, 68, 67, 0.5)\",\r\n      multiplier: 500,\r\n    },\r\n  };\r\n\r\n\r\n\r\nexport const sortData = (data) =>{\r\n    const sortedData = [...data];\r\n\r\n    sortedData.sort((a,b) =>{\r\n        if( a.cases > b.cases ){ return -1; }\r\n        else {return 1 ;}\r\n    }) ;\r\n\r\n    return sortedData ;\r\n};\r\n\r\n// draw circles on the map with interactive tooltip\r\n\r\n\r\nexport const showDataOnMap = (data, casesType = \"cases\") =>\r\n  data.map((country) => (\r\n    <Circle\r\n      center={[country.countryInfo.lat, country.countryInfo.long]}\r\n      color={casesTypeColors[casesType].hex}\r\n      fillColor={casesTypeColors[casesType].hex}\r\n      fillOpacity={0.4}\r\n      radius={\r\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n      }\r\n    >\r\n      <Popup>\r\n       \r\n      <div className=\"info-container\">\r\n            <div\r\n                className=\"info-flag\"\r\n                style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\r\n            />\r\n            <div className=\"info-name\">{country.country}</div>\r\n            <div className=\"info-confirmed\">\r\n                Cases: {numeral(country.cases).format(\"0,0\")}\r\n            </div>\r\n            <div className=\"info-recovered\">\r\n                Recovered: {numeral(country.recovered).format(\"0,0\")}\r\n            </div>\r\n            <div className=\"info-deaths\">\r\n                Deaths: {numeral(country.deaths).format(\"0,0\")}\r\n            </div>\r\n      </div>\r\n\r\n      </Popup>\r\n    </Circle>\r\n  ));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}