{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Dell/Desktop/my covid tracker/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Dell/Desktop/my covid tracker/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/Dell/Desktop/my covid tracker/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{MenuItem,FormControl,Select,Card,CardContent}from\"@material-ui/core\";import'./App.css';import InfoBox from\"./InfoBox\";import Map from\"./Map\";import Table from\"./Table\";import{sortData,prettyPrintStat}from\"./util\";import LineGraph from\"./LineGraph\";import\"leaflet/dist/leaflet.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),countries=_useState2[0],setCountries=_useState2[1];var _useState3=useState(\"worldwide\"),_useState4=_slicedToArray(_useState3,2),country=_useState4[0],setCountry=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),countryInfo=_useState6[0],setCountryInfo=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),tableData=_useState8[0],setTableData=_useState8[1];var _useState9=useState({lat:34.80746,lng:-40.4796}),_useState10=_slicedToArray(_useState9,2),mapCenter=_useState10[0],setMapCenter=_useState10[1];var _useState11=useState(3),_useState12=_slicedToArray(_useState11,2),mapZoom=_useState12[0],setMapZoom=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),mapCountries=_useState14[0],setMapCountries=_useState14[1];var _useState15=useState([\"cases\"]),_useState16=_slicedToArray(_useState15,2),casesType=_useState16[0],setCasesType=_useState16[1];useEffect(function(){fetch(\"https://disease.sh/v3/covid-19/all\").then(function(response){return response.json();}).then(function(data){setCountryInfo(data);});},[]);useEffect(function(){var getCountriesData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://disease.sh/v3/covid-19/countries\").then(function(response){return response.json();}).then(function(data){var countries=data.map(function(country){return{name:country.country,// united states ,United kingdom \nvalue:country.countryInfo.iso2// UK , USA , FR\n};});var sortedData=sortData(data);setTableData(sortedData);setMapCountries(data);setCountries(countries);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function getCountriesData(){return _ref.apply(this,arguments);};}();getCountriesData();},[]);var onCountryChange=function onCountryChange(event){var countryCode=event.target.value;setCountry(countryCode);var url=countryCode==='worldwide'?\"https://disease.sh/v3/covid-19/all\":\"https://disease.sh/v3/covid-19/countries/\".concat(countryCode);fetch(url).then(function(response){return response.json();}).then(function(data){setCountry(countryCode);setCountryInfo(data);setMapCenter([data.countryInfo.lat,data.countryInfo.long]);setMapZoom(4);});};return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"app__left\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"app__header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\" Covid-19 TRACKER \"}),/*#__PURE__*/_jsx(FormControl,{className:\"app__dropdown\",children:/*#__PURE__*/_jsxs(Select,{variant:\"outlined\",onChange:onCountryChange,value:country,children:[/*#__PURE__*/_jsx(MenuItem,{value:\"worldwide\",children:\"Worldwide\"}),countries.map(function(country){return/*#__PURE__*/_jsx(MenuItem,{value:country.value,children:country.name});})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"app__stats\",children:[/*#__PURE__*/_jsx(InfoBox,{isRed:true,active:casesType===\"cases\",onClick:function onClick(e){return setCasesType(\"cases\");},title:\"Coronavirus Cases\",cases:prettyPrintStat(countryInfo.todayCases),total:prettyPrintStat(countryInfo.cases)}),/*#__PURE__*/_jsx(InfoBox,{active:casesType===\"recovered\",onClick:function onClick(e){return setCasesType(\"recovered\");},title:\"recovered\",cases:prettyPrintStat(countryInfo.todayRecovered),total:prettyPrintStat(countryInfo.recovered)}),/*#__PURE__*/_jsx(InfoBox,{isRed:true,active:casesType===\"deaths\",onClick:function onClick(e){return setCasesType(\"deaths\");},title:\"Deaths\",cases:prettyPrintStat(countryInfo.todayDeaths),total:prettyPrintStat(countryInfo.deaths)})]}),/*#__PURE__*/_jsx(Map,{casesType:casesType,countries:mapCountries,center:mapCenter,zoom:mapZoom})]}),/*#__PURE__*/_jsx(Card,{className:\"app__right\",children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Live Cases by country\"}),/*#__PURE__*/_jsx(Table,{countries:tableData}),/*#__PURE__*/_jsx(\"h1\",{className:\"app__classTitle\",children:\" Worldwide New Cases \"}),/*#__PURE__*/_jsx(LineGraph,{className:\"app__graph\",casesType:casesType})]})})]});}export default App;","map":{"version":3,"sources":["C:/Users/Dell/Desktop/my covid tracker/covid-19-tracker/src/App.js"],"names":["React","useState","useEffect","MenuItem","FormControl","Select","Card","CardContent","InfoBox","Map","Table","sortData","prettyPrintStat","LineGraph","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableData","lat","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","mapCountries","setMapCountries","casesType","setCasesType","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","sortedData","onCountryChange","event","countryCode","target","url","long","e","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import React ,{useState, useEffect } from \"react\"\nimport { MenuItem, FormControl, Select , Card, CardContent } from \"@material-ui/core\" ; \nimport './App.css';\nimport InfoBox from \"./InfoBox\";\nimport Map from \"./Map\";\nimport Table from \"./Table\";\nimport { sortData , prettyPrintStat } from \"./util\";\nimport LineGraph from \"./LineGraph\";\nimport \"leaflet/dist/leaflet.css\";\n\n\n\n\nfunction App() {\n\n  const [ countries , setCountries] = useState( [] );\n  const [ country , setCountry ] = useState(\"worldwide\");\n  const [ countryInfo , setCountryInfo ] = useState({});\n  const [ tableData , setTableData ] = useState([]);\n  const [mapCenter , setMapCenter] = useState({ lat: 34.80746 , lng: -40.4796 });\n  const [mapZoom , setMapZoom] = useState(3)\n  const [mapCountries , setMapCountries] = useState([]);\n  const [casesType , setCasesType ] = useState([\"cases\"]);\n\n\n\n\n\n\n\n\n\n\n\n  useEffect(() => {\n   \n    fetch(\"https://disease.sh/v3/covid-19/all\")\n    .then(response => response.json() )\n    .then( data => {\n      setCountryInfo(data); \n\n    });\n\n  }, [])\n\n  useEffect(() => {\n    const getCountriesData = async() => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n      .then((response) => response.json())\n      .then((data)=>{\n          const countries = data.map((country)=>({\n              name: country.country,           // united states ,United kingdom \n              value: country.countryInfo.iso2 // UK , USA , FR\n            }));\n            \n  \n           const sortedData = sortData(data);\n\n           setTableData(sortedData); \n           setMapCountries(data);\n           setCountries(countries); \n      });\n    };\n    getCountriesData(); \n  }, []) ;\n\n\n   const onCountryChange = (event) =>{\n     const countryCode = event.target.value ; \n     setCountry(countryCode);\n\n     const url = countryCode === 'worldwide' ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}` ; \n\n      fetch(url)\n     .then( response => response.json() )\n     .then( data =>{\n         setCountry(countryCode) ; \n         setCountryInfo(data); \n\n         setMapCenter([data.countryInfo.lat , data.countryInfo.long]) ; \n         setMapZoom(4); \n     });\n  };\n\n\n\n\n\n\n\n\n  return (\n    \n    \n    <div className=\"app\"> \n         \n         <div className=\"app__left\">\n\n                                <div className =\"app__header\" >\n                                      <h1> Covid-19 TRACKER </h1>\n                                      <FormControl className =\"app__dropdown\">\n                                        <Select variant =\"outlined\"  onChange={onCountryChange} value = {country} >\n                                            \n                                            <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n                                            {countries.map( country =>( \n                                                    <MenuItem value={country.value}>{country.name}</MenuItem>\n                                              ))}\n                                          \n                                        </Select>\n                                      </FormControl>\n                                  </div>\n\n\n                                <div className =\"app__stats\">\n\n                                    \n                                    <InfoBox isRed active = { casesType === \"cases\" } onClick={e=>setCasesType(\"cases\")}  title =\"Coronavirus Cases\"  cases = {prettyPrintStat(countryInfo.todayCases)}  total = {prettyPrintStat(countryInfo.cases)}/>\n                                    <InfoBox active = { casesType === \"recovered\" } onClick={e=>setCasesType(\"recovered\")} title =\"recovered\"  cases = {prettyPrintStat(countryInfo.todayRecovered)}  total = {prettyPrintStat(countryInfo.recovered)}/>\n                                    <InfoBox isRed active = { casesType === \"deaths\" } onClick={e=>setCasesType(\"deaths\")} title =\"Deaths\"  cases = {prettyPrintStat(countryInfo.todayDeaths)}  total = {prettyPrintStat(countryInfo.deaths)}/>\n                                \n                                \n                                </div>\n\n                                <Map \n                                   \n                                   casesType={casesType}\n                                   countries={mapCountries}\n                                   center ={mapCenter}\n                                   zoom ={mapZoom}\n\n                                /> \n\n         </div>\n\n         < Card className =\"app__right\"> \n         \n               <CardContent>\n\n\n                   <h3>Live Cases by country</h3>\n                   < Table countries ={tableData} />\n\n                   <h1 className=\"app__classTitle\"> Worldwide New Cases </h1>\n                   < LineGraph \n                    \n                      className=\"app__graph\"   \n                      casesType={casesType}\n                   \n                   />\n\n               </CardContent>\n\n         </Card>\n    \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}