{"ast":null,"code":"import _toConsumableArray from\"C:/Users/Dell/Desktop/my covid tracker/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React from\"react\";import numeral from\"numeral\";import{Circle,Popup}from\"react-leaflet\";import\"./Map.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var casesTypeColors={cases:{hex:\"#CC1034\",rgb:\"rgb(204, 16, 52)\",half_op:\"rgba(204, 16, 52, 0.5)\",multiplier:200},recovered:{hex:\"#7dd71d\",rgb:\"rgb(125, 215, 29)\",half_op:\"rgba(125, 215, 29, 0.5)\",multiplier:260},deaths:{hex:\"#fb4443\",rgb:\"rgb(251, 68, 67)\",half_op:\"rgba(251, 68, 67, 0.5)\",multiplier:500}};export var sortData=function sortData(data){var sortedData=_toConsumableArray(data);sortedData.sort(function(a,b){if(a.cases>b.cases){return-1;}else{return 1;}});return sortedData;};// draw circles on the map with interactive tooltip\nexport var showDataOnMap=function showDataOnMap(data){var casesType=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"cases\";return data.map(function(country){return/*#__PURE__*/_jsx(Circle,{center:[country.countryInfo.lat,country.countryInfo.long],color:casesTypeColors[casesType].hex,fillColor:casesTypeColors[casesType].hex,fillOpacity:0.4,radius:Math.sqrt(country[casesType])*casesTypeColors[casesType].multiplier,children:/*#__PURE__*/_jsx(Popup,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"info-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"info-flag\",style:{backgroundImage:\"url(\".concat(country.countryInfo.flag,\")\")}}),/*#__PURE__*/_jsx(\"div\",{className:\"info-name\",children:country.country}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-confirmed\",children:[\"Cases: \",numeral(country.cases).format(\"0,0\")]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-recovered\",children:[\"Recovered: \",numeral(country.recovered).format(\"0,0\")]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-deaths\",children:[\"Deaths: \",numeral(country.deaths).format(\"0,0\")]})]})})});});};export var prettyPrintStat=function prettyPrintStat(stat){return stat?\"+\".concat(numeral(stat).format(\"0.0a\")):\"+0\";};","map":{"version":3,"sources":["C:/Users/Dell/Desktop/my covid tracker/covid-19-tracker/src/util.js"],"names":["React","numeral","Circle","Popup","casesTypeColors","cases","hex","rgb","half_op","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","showDataOnMap","casesType","map","country","countryInfo","lat","long","Math","sqrt","backgroundImage","flag","format","prettyPrintStat","stat"],"mappings":"sLAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,SAApB,CACA,OAASC,MAAT,CAAkBC,KAAlB,KAA+B,eAA/B,CACA,MAAO,WAAP,C,wFAGA,GAAMC,CAAAA,eAAe,CAAG,CACpBC,KAAK,CAAE,CACLC,GAAG,CAAE,SADA,CAELC,GAAG,CAAE,kBAFA,CAGLC,OAAO,CAAE,wBAHJ,CAILC,UAAU,CAAE,GAJP,CADa,CAOpBC,SAAS,CAAE,CACTJ,GAAG,CAAE,SADI,CAETC,GAAG,CAAE,mBAFI,CAGTC,OAAO,CAAE,yBAHA,CAITC,UAAU,CAAE,GAJH,CAPS,CAapBE,MAAM,CAAE,CACNL,GAAG,CAAE,SADC,CAENC,GAAG,CAAE,kBAFC,CAGNC,OAAO,CAAE,wBAHH,CAINC,UAAU,CAAE,GAJN,CAbY,CAAxB,CAuBA,MAAO,IAAMG,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,CAAS,CAC7B,GAAMC,CAAAA,UAAU,oBAAOD,IAAP,CAAhB,CAEAC,UAAU,CAACC,IAAX,CAAgB,SAACC,CAAD,CAAGC,CAAH,CAAQ,CACpB,GAAID,CAAC,CAACX,KAAF,CAAUY,CAAC,CAACZ,KAAhB,CAAuB,CAAE,MAAO,CAAC,CAAR,CAAY,CAArC,IACK,CAAC,MAAO,EAAP,CAAW,CACpB,CAHD,EAKA,MAAOS,CAAAA,UAAP,CACH,CATM,CAWP;AAGA,MAAO,IAAMI,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACL,IAAD,KAAOM,CAAAA,SAAP,2DAAmB,OAAnB,OAC3BN,CAAAA,IAAI,CAACO,GAAL,CAAS,SAACC,OAAD,qBACP,KAAC,MAAD,EACE,MAAM,CAAE,CAACA,OAAO,CAACC,WAAR,CAAoBC,GAArB,CAA0BF,OAAO,CAACC,WAAR,CAAoBE,IAA9C,CADV,CAEE,KAAK,CAAEpB,eAAe,CAACe,SAAD,CAAf,CAA2Bb,GAFpC,CAGE,SAAS,CAAEF,eAAe,CAACe,SAAD,CAAf,CAA2Bb,GAHxC,CAIE,WAAW,CAAE,GAJf,CAKE,MAAM,CACJmB,IAAI,CAACC,IAAL,CAAUL,OAAO,CAACF,SAAD,CAAjB,EAAgCf,eAAe,CAACe,SAAD,CAAf,CAA2BV,UAN/D,uBASE,KAAC,KAAD,wBAEA,aAAK,SAAS,CAAC,gBAAf,wBACM,YACI,SAAS,CAAC,WADd,CAEI,KAAK,CAAE,CAAEkB,eAAe,eAASN,OAAO,CAACC,WAAR,CAAoBM,IAA7B,KAAjB,CAFX,EADN,cAKM,YAAK,SAAS,CAAC,WAAf,UAA4BP,OAAO,CAACA,OAApC,EALN,cAMM,aAAK,SAAS,CAAC,gBAAf,qBACYpB,OAAO,CAACoB,OAAO,CAAChB,KAAT,CAAP,CAAuBwB,MAAvB,CAA8B,KAA9B,CADZ,GANN,cASM,aAAK,SAAS,CAAC,gBAAf,yBACgB5B,OAAO,CAACoB,OAAO,CAACX,SAAT,CAAP,CAA2BmB,MAA3B,CAAkC,KAAlC,CADhB,GATN,cAYM,aAAK,SAAS,CAAC,aAAf,sBACa5B,OAAO,CAACoB,OAAO,CAACV,MAAT,CAAP,CAAwBkB,MAAxB,CAA+B,KAA/B,CADb,GAZN,GAFA,EATF,EADO,EAAT,CAD2B,EAAtB,CAsCL,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,IAAD,QAC/BA,CAAAA,IAAI,YAAO9B,OAAO,CAAC8B,IAAD,CAAP,CAAcF,MAAd,CAAqB,MAArB,CAAP,EAAwC,IADb,EAAxB","sourcesContent":["import React from \"react\" ;\r\nimport numeral from \"numeral\" ;\r\nimport { Circle , Popup } from \"react-leaflet\" ; \r\nimport \"./Map.css\";\r\n\r\n\r\nconst casesTypeColors = {\r\n    cases: {\r\n      hex: \"#CC1034\",\r\n      rgb: \"rgb(204, 16, 52)\",\r\n      half_op: \"rgba(204, 16, 52, 0.5)\",\r\n      multiplier: 200,\r\n    },\r\n    recovered: {\r\n      hex: \"#7dd71d\",\r\n      rgb: \"rgb(125, 215, 29)\",\r\n      half_op: \"rgba(125, 215, 29, 0.5)\",\r\n      multiplier: 260,\r\n    },\r\n    deaths: {\r\n      hex: \"#fb4443\",\r\n      rgb: \"rgb(251, 68, 67)\",\r\n      half_op: \"rgba(251, 68, 67, 0.5)\",\r\n      multiplier: 500,\r\n    },\r\n  };\r\n\r\n\r\n\r\nexport const sortData = (data) =>{\r\n    const sortedData = [...data];\r\n\r\n    sortedData.sort((a,b) =>{\r\n        if( a.cases > b.cases ){ return -1; }\r\n        else {return 1 ;}\r\n    }) ;\r\n\r\n    return sortedData ;\r\n};\r\n\r\n// draw circles on the map with interactive tooltip\r\n\r\n\r\nexport const showDataOnMap = (data, casesType = \"cases\") =>\r\n  data.map((country) => (\r\n    <Circle\r\n      center={[country.countryInfo.lat, country.countryInfo.long]}\r\n      color={casesTypeColors[casesType].hex}\r\n      fillColor={casesTypeColors[casesType].hex}\r\n      fillOpacity={0.4}\r\n      radius={\r\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n      }\r\n    >\r\n      <Popup>\r\n       \r\n      <div className=\"info-container\">\r\n            <div\r\n                className=\"info-flag\"\r\n                style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\r\n            />\r\n            <div className=\"info-name\">{country.country}</div>\r\n            <div className=\"info-confirmed\">\r\n                Cases: {numeral(country.cases).format(\"0,0\")}\r\n            </div>\r\n            <div className=\"info-recovered\">\r\n                Recovered: {numeral(country.recovered).format(\"0,0\")}\r\n            </div>\r\n            <div className=\"info-deaths\">\r\n                Deaths: {numeral(country.deaths).format(\"0,0\")}\r\n            </div>\r\n      </div>\r\n\r\n      </Popup>\r\n    </Circle>\r\n  ));\r\n\r\n\r\n\r\n\r\n\r\n  export const prettyPrintStat = (stat) =>\r\n  stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}